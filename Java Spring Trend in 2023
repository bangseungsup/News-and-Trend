1. Serverless Architecture
서버리스 아키텍처는 물리적 서버의 인프라를 관리할 사람 없이 실행되는 애플리케이션입니다. 
클라우드 기술은 매년 주목받고 있으며 Oracle Java Cloud Service , Java용 AWS SDK 및 Google App Engine을 포함하여 Java에서 클라우드 개발을 위한 수많은 도구가 있습니다. 

2. Remote Access Solutions
COVID-19 팬데믹 시기에 Java의 기여도는 높습니다. 원격 액세스 솔루션은 원격 작업자가 사무실 자료에 안전하게 액세스할 수 있도록 도와줍니다. 
재택 근무 사용자를 위한 원격 액세스 솔루션을 제공하는 데스크탑 애플리케이션을 구축하는 것은 Java 기술을 활용하는 좋은 방법입니다. 
고유한 백엔드 기능과 보안 기능을 통해 Java 언어를 사용하는 엔터프라이즈 규모의 솔루션이 매우 좋아집니다. 

3. Git
Git은 독점적으로 Java 기술은 아니지만 웹 기반 기술이며 충분히 유용합니다. 대부분의 개발자는 GitHub가 무엇인지 알고 있지만 Git을 마스터한 사람은 거의 없습니다 . 
그러나 자신감을 가지고 Git을 사용할 수 있는 개발자라면 누구나 마법사처럼 보일 것입니다.

4. Spring Framework
Java 트렌드를 따라가려면 Java 개발자는 이전 기술에 대한 최신 업데이트를 지속적으로 찾아야 합니다. 
Spring Framework는 배포하기 쉬운 Java 기술로, 괜찮은 Java 개발자라면 이미 보유하고 있어야 합니다.
시장에 새로 출시된 Spring 5, Spring Security 5.0 및 Spring Boot 2.0으로 소프트웨어 개발 팀이 기술과 지식을 확장할 수 있는 충분한 공간이 있습니다.

5. Latest features in Java 14 and 15 
Java 개발자의 삶을 더 쉽게 만들기 위해 Java 14 및 15 버전이 도입되었습니다. 이러한 기능을 통해 코드 줄 사이에서 길을 잃지 않고 최대한의 가치를 창출할 수 있습니다. 
소개된 몇 가지 기능은 다음과 같습니다.
  - Record : 상용구 코드를 줄이고 불변 데이터 개체를 더 쉽게 만들 수 있도록 하는 데 사용되는 Java 15의 특수 클래스입니다. 
  - NullPointException : 이는 디버깅에 사용되는 또 다른 Java 14 기능으로 null 변수와 예외를 발생시킨 호출의 이름을 가리킵니다. 
  - Hidden classes : 동적 바이트 코드 또는 JVM 언어로 작업하는 개발자에게 유용한 Java 15 기능입니다. 
  - Switch expressions : 이는 Java 14의 표준 기능으로 설정되었으며 이제 해당 변수에 할당할 수 있습니다.  

6. Java Concurrency 
Java 동시성 프로그래밍은 여러 프로그램 또는 모바일 응용 프로그램을 동시에 실행할 수 있는 Java의 또 다른 인기 있는 기술입니다. 멀티스레딩 및 동기화를 통해 지원됩니다. 
멀티스레딩은 Java에서 프로그램이 실행될 때마다 따라가는 경로를 구성하기 위해 서로 다른 스레드의 데이터에 액세스할 수 있는 경량 프로세스입니다. 
Java 동시성은 프로그램의 일부를 병렬로 실행하고 작업을 완료하는 데 필요한 시간을 줄일 수 있으므로 프로그램을 개선하고 프로세스를 최적화하는 데 도움이 됩니다.  

7. Reactive Java 
리액티브 프로그래밍은 데이터 양이 급증함에 따라 그 어느 때보다 관련성이 높아졌습니다. 데이터 소스와 해당 데이터의 소비자를 정의하는 프로그래밍 패러다임으로 전환할 때입니다. 
2013년에 처음 출시된 RxJava는 소비자를 데이터 소스에 연결하고 RxJava가 데이터를 소비자에게 푸시하는 JVM용 반응형 확장입니다. 
이 라이브러리는 개발자가 비동기, 동시 및 탄력적인 Java 애플리케이션을 빌드하는 데 도움을 줄 수 있으며 코드를 덜 부피가 크고 더 우아하게 보이게 합니다.


출처. https://www.sayonetech.com/blog/trends-in-java-spring-boot-development/

